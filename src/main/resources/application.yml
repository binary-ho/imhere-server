spring:
  redis:
    host: redis
    port: 6379
    password: ENC(QDFGW5huIiRsK9z8tmV6ng==)

  jpa:
    open-in-view: false

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ENC(18FNZ6cjSHBH889DgERn3ZscMgAY8R02b6DBg9l47Xs=)
            client-secret: ENC(hUvBA0g45hgzXQ2Ia/ovO8dQWDR67BsVt6Um0h1cSh/qrwKaWdVND06XApXIJMSaZy5Kem6nJx4=)

jwt:
  secret: ENC(Wi5BD1R9VNidIJj2xI10Ww==)
  prefix: "Bearer "
  header-string: "Authorization"
  access-token-prefix: "Token "

# SMTP
mail:
  smtp:
    auth: true
    starttls:
      required: true
      enable: true

    socketFactory:
      class: javax.net.ssl.SSLSocketFactory
      fallback: false
      port: 465

    port: 465

# admin 구글 계정
AdminMail:
  id: ENC(wPQnA6wFGpeuODHjXHm/eyKNUXNq694VH2G97+jWDSU=)
  password: ENC(aRfl+HHF9UNK0z2TRkQ53cuUw/3OcYElfHNMWTCD51Q=)

jasypt:
  encryptor:
    bean: propertyEncryptor
  secret-key: ${JASYPT_ENCRYPTION_PASSWORD}

management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /system/actuator
  endpoint:
    health:
      show-details: always

server:
  tomcat:
    mbeanregistry:
      enabled: true

actuator:
  username: ENC(QrTY/DXdFpQxYe6AEmcwjzwCiatUHeym)
  password: ENC(x3q+XW2ivp/FlEpQnRJIGw2gAehDnLwk)
  role: ENC(wjFg82eV2hT4ElsuFkon2KIi8apIzP31)
